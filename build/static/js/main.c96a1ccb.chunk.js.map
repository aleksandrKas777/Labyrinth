{"version":3,"sources":["redux/redusers/reducer.ts","redux/store.ts","redux/dispatchers/dispatcher.ts","images/start-button.png","images/finish.png","images/cellWinner.png","images/cellLosing.png","components/playground/cell/Cell.tsx","components/playground/rowCells/RowCells.tsx","components/playground/Playground.tsx","components/header/Header.tsx","images/arrow-up.png","images/arrow-down.png","images/arrow-left.png","images/arrow-right.png","images/winnerHomer.png","images/losingHomer.png","images/meditateHomer.png","components/track/Track.tsx","components/header/modalContent/statistic/Statistic.tsx","components/header/modalContent/settings/Settings.tsx","components/header/modalContent/ModalContent.tsx","components/modal/Modal.tsx","components/App.tsx","index.tsx"],"names":["sliceConfig","name","initialState","size","startPosition","positionMatrix","cells","moveArr","arrow","btnDisable","result","userCell","modalActive","statisticGame","speedGame","btnStart","reducers","sizeReducer","state","action","payload","startPositionReducer","cellsReducer","positionMatrixReducer","moveArrReducer","arrowReducer","btnDisableReducer","resultReducer","userCellReducer","modalActiveReducer","statisticGameReducer","speedGameReducer","btnStartReducer","createSlice","reducer","actions","store","configureStore","dispatch","sizeDispatcher","startPositionDispatcher","positionMatrixDispatcher","arrowDispatcher","btnDisableDispatcher","resultDispatcher","userCellDispatcher","modalActiveDispatcher","statisticGameDispatcher","statistic","btnStartDispatcher","btnText","Cell","item","useSelector","btnImg","className","src","start","alt","cellLosing","finish","cellWinner","id","disabled","onClick","event","parseInt","target","resultGame","today","Date","dateGame","String","getDate","padStart","getMonth","getFullYear","getHours","getMinutes","resultsAllGames","slice","length","pop","unshift","RowCells","itemRow","arrCellsRow","i","push","map","toString","Playground","useEffect","arrCells","startPositionMatrix","j","positionCell","console","log","stylePlayground","maxWidth","position","Math","floor","random","counter","style","Header","Track","arrowImg","resultImg","moveRoute","crossroadsArr","indexOf","step","moveArrDispatcher","timer","setInterval","clearInterval","arrowDown","arrowLeft","arrowRight","arrowUp","homer","winner","losing","Statistic","index","Settings","useState","setSize","complexity","setComplexity","value","onChange","selected","ModalContent","content","ModalWindow","JSON","parse","localStorage","getItem","setItem","stringify","e","stopPropagation","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c96a1ccb.chunk.js","sourcesContent":["import {createSlice, PayloadAction} from '@reduxjs/toolkit';\r\n\r\ninterface InitialState {\r\n    size: number,\r\n    startPosition: number,\r\n    positionMatrix: number,\r\n    cells: number[],\r\n    moveArr: string[],\r\n    arrow: string,\r\n    btnDisable: boolean,\r\n    result: string,\r\n    userCell: number,\r\n    modalActive: string,\r\n    statisticGame: string[],\r\n    speedGame: number,\r\n    btnStart: string,\r\n}\r\n\r\nconst initialState: InitialState = {\r\n    size: 0,\r\n    startPosition: 0,\r\n    positionMatrix: 0,\r\n    cells: [],\r\n    moveArr: ['text'],\r\n    arrow: 'text',\r\n    btnDisable: true,\r\n    result: '',\r\n    userCell: 0,\r\n    modalActive: '',\r\n    statisticGame: [],\r\n    speedGame: 1500,\r\n    btnStart: 'start'\r\n};\r\n\r\nconst sliceConfig = {\r\n    name: 'labyrinthReducer',\r\n    initialState: initialState,\r\n    reducers: {\r\n        sizeReducer: (state: any, action: PayloadAction<number>) => {\r\n            state.size = action.payload;\r\n        },\r\n        startPositionReducer: (state: any, action: PayloadAction<number>) => {\r\n            state.startPosition = action.payload;\r\n        },\r\n        cellsReducer: (state: any, action: PayloadAction<Array<number>>) => {\r\n            state.cells = action.payload;\r\n        },\r\n        positionMatrixReducer: (state: any, action: PayloadAction<number>) => {\r\n            state.positionMatrix = action.payload;\r\n        },\r\n        moveArrReducer: (state: any, action: PayloadAction<Array<string>>) => {\r\n            state.moveArr = action.payload;\r\n        },\r\n        arrowReducer: (state: any, action: PayloadAction<string>) => {\r\n            state.arrow = action.payload;\r\n        },\r\n        btnDisableReducer: (state: any, action: PayloadAction<boolean>) => {\r\n            state.btnDisable = action.payload;\r\n        },\r\n        resultReducer: (state: any, action: PayloadAction<string>) => {\r\n            state.result = action.payload;\r\n        },\r\n        userCellReducer: (state: any, action: PayloadAction<number>) => {\r\n            state.userCell = action.payload;\r\n        },\r\n        modalActiveReducer: (state: any, action: PayloadAction<string>) => {\r\n            state.modalActive = action.payload;\r\n        },\r\n        statisticGameReducer: (state: any, action: PayloadAction<Array<string>>) => {\r\n            state.statisticGame = action.payload;\r\n        },\r\n        speedGameReducer: (state: any, action: PayloadAction<number>) => {\r\n            state.speedGame = action.payload;\r\n        },\r\n        btnStartReducer: (state: any, action: PayloadAction<string>) => {\r\n            state.btnStart = action.payload;\r\n        }\r\n    }\r\n};\r\n\r\nexport const {reducer, actions} = createSlice(sliceConfig);\r\n\r\n","import {configureStore} from '@reduxjs/toolkit';\r\nimport {reducer} from './redusers/reducer';\r\n\r\nexport const store = configureStore({reducer});\r\nexport type RootState = ReturnType<typeof store.getState>","import {actions} from '../redusers/reducer';\r\nimport {store} from '../store';\r\n\r\nconst {dispatch} = store;\r\nconst {\r\n    sizeReducer,\r\n    startPositionReducer,\r\n    cellsReducer,\r\n    positionMatrixReducer,\r\n    moveArrReducer,\r\n    arrowReducer,\r\n    btnDisableReducer,\r\n    resultReducer,\r\n    userCellReducer,\r\n    modalActiveReducer,\r\n    statisticGameReducer,\r\n    speedGameReducer,\r\n    btnStartReducer\r\n} = actions;\r\n\r\nexport const sizeDispatcher = (size: number) => dispatch(sizeReducer(size));\r\nexport const startPositionDispatcher = (startPosition: number) => dispatch(startPositionReducer(startPosition));\r\nexport const cellDispatcher = (sells: Array<number>) => dispatch(cellsReducer(sells));\r\nexport const positionMatrixDispatcher = (positionMatrix: number) => dispatch(positionMatrixReducer(positionMatrix));\r\nexport const moveArrDispatcher = (moveRoute: Array<string>) => dispatch(moveArrReducer(moveRoute));\r\nexport const arrowDispatcher = (arrow: string) => dispatch(arrowReducer(arrow));\r\nexport const btnDisableDispatcher = (btnDisable: boolean) => dispatch(btnDisableReducer(btnDisable));\r\nexport const resultDispatcher = (result: string) => dispatch(resultReducer(result));\r\nexport const userCellDispatcher = (userCell: number) => dispatch(userCellReducer(userCell));\r\nexport const modalActiveDispatcher = (modalActive: string) => dispatch(modalActiveReducer(modalActive));\r\nexport const statisticGameDispatcher = (statistic: Array<string>) => dispatch(statisticGameReducer(statistic));\r\nexport const speedGameDispatcher = (speed: number) => dispatch(speedGameReducer(speed));\r\nexport const btnStartDispatcher = (btnText: string) => dispatch(btnStartReducer(btnText));","export default __webpack_public_path__ + \"static/media/start-button.d59a7d73.png\";","export default __webpack_public_path__ + \"static/media/finish.44c8c669.png\";","export default __webpack_public_path__ + \"static/media/cellWinner.c2914375.png\";","export default __webpack_public_path__ + \"static/media/cellLosing.52911a61.png\";","import start from '../../../images/start-button.png';\r\nimport finish from '../../../images/finish.png';\r\nimport cellWinner from '../../../images/cellWinner.png';\r\nimport cellLosing from '../../../images/cellLosing.png';\r\nimport React from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport {RootState} from '../../../redux/store';\r\nimport {\r\n    btnDisableDispatcher,\r\n    resultDispatcher, userCellDispatcher, statisticGameDispatcher, btnStartDispatcher,\r\n} from '../../../redux/dispatchers/dispatcher';\r\n\r\ninterface CellProps {\r\n    item: number,\r\n}\r\n\r\nexport const Cell = ({item}: CellProps) => {\r\n    const {\r\n        startPosition,\r\n        btnDisable,\r\n        positionMatrix,\r\n        userCell,\r\n        statisticGame,\r\n    } = useSelector((state: RootState) => state);\r\n\r\n\r\n    const resultGame = (event: any) => {\r\n        userCellDispatcher(parseInt(event.target.id));\r\n        btnDisableDispatcher(true);\r\n        btnStartDispatcher('start');\r\n\r\n        const resultGame = positionMatrix + '' === event.target.id ? 'winner' : 'losing';\r\n\r\n        resultDispatcher(resultGame);\r\n\r\n\r\n        const today = new Date();\r\n        const day = String(today.getDate()).padStart(2, '0');\r\n        const month = String(today.getMonth() + 1).padStart(2, '0');\r\n        const year = String(today.getFullYear());\r\n        const hour = String(today.getHours());\r\n        const minutes = String(today.getMinutes()).padStart(2, '0');\r\n        const dateGame = day + '.' + month + '.' + year + ' ' + hour + ':' + minutes + ' ' + (resultGame === 'winner' ? 'Победа' : 'Поражение');\r\n\r\n        // запись статистики в состояние\r\n        const resultsAllGames = statisticGame.slice();\r\n        if (resultsAllGames.length > 20) {\r\n            resultsAllGames.pop();\r\n        }\r\n        resultsAllGames.unshift(dateGame);\r\n        statisticGameDispatcher(resultsAllGames);\r\n    }\r\n\r\n\r\n    let btnImg = <div/>;\r\n    if (item === startPosition) {\r\n        btnImg = <img className=\"cellImg\" src={start}\r\n                      alt=\"START\"/>\r\n    }\r\n    if (userCell !== 0) {\r\n        if (userCell !== positionMatrix) {\r\n            if (item === userCell) {\r\n                btnImg = <img className=\"cellImg\" src={cellLosing}\r\n                              alt=\"проигрыш\"/>\r\n            }\r\n            if (item === positionMatrix) {\r\n                btnImg = <img className=\"cellImg\" src={finish}\r\n                              alt=\"\"/>\r\n            }\r\n        }\r\n        if (userCell === positionMatrix && item === positionMatrix) {\r\n            btnImg = <img className=\"cellImg\" src={cellWinner}\r\n                          alt=\"победа\"/>\r\n        }\r\n    }\r\n\r\n    return (<button id={item + ''} disabled={btnDisable} onClick={resultGame} className=\"cell\">{btnImg}</button>)\r\n\r\n}\r\n\r\n","import {useSelector} from 'react-redux';\r\nimport {RootState} from '../../../redux/store';\r\nimport React from 'react';\r\nimport {Cell} from '../cell/Cell';\r\n\r\ninterface RowCellsProps {\r\n    itemRow: number,\r\n}\r\n\r\nexport const RowCells: ({itemRow}: RowCellsProps) => JSX.Element = ({itemRow}: RowCellsProps) => {\r\n    const {\r\n        size\r\n    } = useSelector((state: RootState) => state);\r\n\r\n    const arrCellsRow = [];\r\n    for (let i = 1; i <= size; i++) {\r\n        arrCellsRow.push(itemRow + i);\r\n    }\r\n\r\n    return (\r\n        <div className='rowCells'>\r\n            {arrCellsRow.map((item) => <Cell key={item.toString()} item={item}/>)}\r\n        </div>\r\n    )\r\n}","import React, {useEffect} from 'react';\r\nimport './index.scss';\r\nimport {useSelector} from 'react-redux';\r\nimport {\r\n    cellDispatcher,\r\n    sizeDispatcher,\r\n    startPositionDispatcher,\r\n    positionMatrixDispatcher,\r\n    btnDisableDispatcher, arrowDispatcher, resultDispatcher, userCellDispatcher, btnStartDispatcher\r\n} from '../../redux/dispatchers/dispatcher';\r\nimport {RootState} from '../../redux/store';\r\nimport {RowCells} from './rowCells/RowCells';\r\n\r\n\r\nexport const Playground: React.FunctionComponent = () => {\r\n    const {size, btnStart} = useSelector((state: RootState) => state);\r\n\r\n\r\n    useEffect(() => {\r\n        sizeDispatcher(6);\r\n\r\n    }, [])\r\n\r\n\r\n    let cells: number[] = [];\r\n    let arrCells: number[] = [];\r\n    for (let i = 1; i < size + 1; i++) {\r\n        const startPositionMatrix = i * 10\r\n        cells.push(startPositionMatrix);\r\n        for (let j = 1; j < size + 1; j++) {\r\n            const positionCell = startPositionMatrix + j\r\n            arrCells.push(positionCell);\r\n        }\r\n        console.log(arrCells);\r\n    }\r\n\r\n\r\n    const startGame = () => {\r\n        resultDispatcher('');\r\n        arrowDispatcher('text');\r\n        userCellDispatcher(0);\r\n        btnStartDispatcher('restart');\r\n        btnDisableDispatcher(false);\r\n        const position = Math.floor(Math.random() * (size * size));\r\n\r\n        let counter = 0;\r\n        for (let i = 1; i < arrCells.length + 1; i++) {\r\n            if (counter === position) {\r\n                startPositionDispatcher(arrCells[i]);\r\n                positionMatrixDispatcher(arrCells[i]);\r\n            }\r\n            counter++;\r\n        }\r\n        cellDispatcher(arrCells);\r\n\r\n    };\r\n\r\n    const stylePlayground = {\r\n        maxWidth: 100 * size + 4 * size + 'px',\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"btnStart\">\r\n                <button onClick={startGame}>{btnStart === 'start' ? 'начать игру' : 'начать заново'}</button>\r\n            </div>\r\n            <div className={'playground'} style={stylePlayground}>\r\n                {cells.map((item) => <RowCells key={item.toString()} itemRow={item}/>)}\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport './index.scss';\r\nimport {modalActiveDispatcher} from '../../redux/dispatchers/dispatcher';\r\n\r\nexport const Header = () => {\r\n\r\n    return (\r\n        <header>\r\n            <nav>\r\n                <ul className=\"nav_ul\">\r\n                    <li className=\"nav_item\" onClick={() => {\r\n                        modalActiveDispatcher('statistic')\r\n                    }}>Статистика\r\n                    </li>\r\n                    <li className=\"nav_item\" onClick={() => { modalActiveDispatcher('settings')}}>Настройки игры</li>\r\n                </ul>\r\n            </nav>\r\n\r\n            <div className=\"title\"><h1>Лабиринт</h1></div>\r\n\r\n        </header>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/arrow-up.fd2496e9.png\";","export default __webpack_public_path__ + \"static/media/arrow-down.67258580.png\";","export default __webpack_public_path__ + \"static/media/arrow-left.69ce296a.png\";","export default __webpack_public_path__ + \"static/media/arrow-right.603c0af1.png\";","export default __webpack_public_path__ + \"static/media/winnerHomer.d114befb.png\";","export default __webpack_public_path__ + \"static/media/losingHomer.aa899d62.png\";","export default __webpack_public_path__ + \"static/media/meditateHomer.a98ba606.png\";","import React, {useEffect} from 'react';\r\nimport arrowUp from '../../images/arrow-up.png';\r\nimport arrowDown from '../../images/arrow-down.png';\r\nimport arrowLeft from '../../images/arrow-left.png';\r\nimport arrowRight from '../../images/arrow-right.png';\r\nimport winner from '../../images/winnerHomer.png';\r\nimport losing from '../../images/losingHomer.png';\r\nimport homer from '../../images/meditateHomer.png';\r\nimport './index.scss';\r\nimport {useSelector} from 'react-redux';\r\nimport {RootState} from '../../redux/store';\r\nimport {\r\n    moveArrDispatcher,\r\n    positionMatrixDispatcher,\r\n    arrowDispatcher, btnStartDispatcher\r\n} from '../../redux/dispatchers/dispatcher';\r\n\r\n\r\nexport const Track = () => {\r\n    const {cells, startPosition, moveArr, arrow, result, speedGame} = useSelector((state: RootState) => state);\r\n    const countStep = 11;\r\n\r\n    // создаем массив ходов\r\n    useEffect(() => {\r\n        if (startPosition !== 0) {\r\n            let positionMatrix = startPosition;\r\n            const moveRoute: string[] = [];\r\n            for (let i = 0; i < countStep; i++) {\r\n                // возможные ходы\r\n                const crossroadsArr: string[] = [];\r\n\r\n                if (cells.indexOf(positionMatrix + 10) !== -1 && moveRoute[moveRoute.length - 1] !== 'down') {\r\n                    crossroadsArr.push('down');\r\n\r\n                }\r\n                if (cells.indexOf(positionMatrix - 10) !== -1 && moveRoute[moveRoute.length - 1] !== 'up') {\r\n                    crossroadsArr.push('up');\r\n\r\n                }\r\n                if (cells.indexOf(positionMatrix + 1) !== -1 && moveRoute[moveRoute.length - 1] !== 'right') {\r\n                    crossroadsArr.push('right');\r\n\r\n                }\r\n                if (cells.indexOf(positionMatrix - 1) !== -1 && moveRoute[moveRoute.length - 1] !== 'left') {\r\n                    crossroadsArr.push('left');\r\n\r\n                }\r\n\r\n                // делаем ход\r\n                const step = Math.floor(Math.random() * crossroadsArr.length);\r\n                moveRoute.push(crossroadsArr[step]);\r\n\r\n                if (crossroadsArr[step] === 'down') {\r\n                    positionMatrix = positionMatrix + 10;\r\n                } else if (crossroadsArr[step] === 'up') {\r\n                    positionMatrix = positionMatrix - 10;\r\n                } else if (crossroadsArr[step] === 'right') {\r\n                    positionMatrix = positionMatrix + 1;\r\n                } else {\r\n                    positionMatrix = positionMatrix - 1;\r\n                }\r\n\r\n            }\r\n            moveRoute.push('homer');\r\n            moveArrDispatcher(moveRoute);\r\n            positionMatrixDispatcher(positionMatrix);\r\n        }\r\n\r\n    }, [cells, startPosition]);\r\n\r\n    // проходим по массиву с ходами и устанавливаем направление стрелки\r\n    useEffect(() => {\r\n\r\n        let counter = 0;\r\n        const timer = setInterval(() => {\r\n            if (countStep === counter || startPosition === 0 || result !== '') {\r\n                clearInterval(timer);\r\n\r\n            }\r\n            arrowDispatcher(moveArr[counter]);\r\n            counter++;\r\n\r\n        }, speedGame);\r\n\r\n        return () => clearInterval(timer);\r\n\r\n    }, [moveArr, result, startPosition, speedGame]);\r\n\r\n\r\n    let arrowImg: JSX.Element;\r\n    if (arrow === 'down') {\r\n        arrowImg = <img src={arrowDown} className=\"arrow\" alt=\"вниз\"/>;\r\n    } else if (arrow === 'left') {\r\n        arrowImg = <img src={arrowLeft} className=\"arrow\" alt=\"влево\"/>;\r\n    } else if (arrow === 'right') {\r\n        arrowImg = <img src={arrowRight} className=\"arrow\" alt=\"вправо\"/>;\r\n    } else if (arrow === 'up') {\r\n        arrowImg = <img src={arrowUp} className=\"arrow\" alt=\"вверх\"/>;\r\n    } else if (arrow === 'homer') {\r\n        arrowImg = <img src={homer} className=\"arrow homer\" alt=\"homer\"/>;\r\n        btnStartDispatcher('start');\r\n    } else {\r\n        arrowImg = <div className=\"arrow\">здесь будет указано направление</div>;\r\n    }\r\n\r\n    let resultImg: JSX.Element;\r\n    resultImg = result === 'winner' ?\r\n        <img className=\"result\" src={winner} alt=\"победа\"/> :\r\n        <img className=\"result\" src={losing} alt=\"победа\"/>;\r\n\r\n\r\n    return (\r\n        <div className=\"track\">\r\n            {result === '' ? arrowImg : resultImg}\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport {RootState} from '../../../../redux/store';\r\nimport {\r\n    modalActiveDispatcher,\r\n    statisticGameDispatcher\r\n} from '../../../../redux/dispatchers/dispatcher';\r\n\r\nexport const Statistic: React.FunctionComponent = () => {\r\n    const {statisticGame} = useSelector((state: RootState) => state);\r\n\r\n    const modalClose = () => {\r\n        statisticGameDispatcher([]);\r\n        modalActiveDispatcher('');\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>Статистика</h2>\r\n            <ul>{statisticGame.map((item , index)=> <li key={(index + 200).toString()}>{item}</li>)}</ul>\r\n            <div id='deleteStatistic' onClick={modalClose}>{statisticGame.length < 1? null: 'очистить'}</div>\r\n            <button onClick={() => modalActiveDispatcher('')}>закрыть</button>\r\n        </>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport {\r\n    arrowDispatcher,\r\n    modalActiveDispatcher,\r\n    resultDispatcher,\r\n    sizeDispatcher,\r\n    speedGameDispatcher, startPositionDispatcher, userCellDispatcher\r\n} from '../../../../redux/dispatchers/dispatcher';\r\n\r\nexport const Settings: React.FunctionComponent = () => {\r\n    const [size, setSize] = useState(6);\r\n    const [complexity, setComplexity] = useState(1500);\r\n\r\n    const settingsSave = () => {\r\n        arrowDispatcher('text');\r\n        startPositionDispatcher(0)\r\n        resultDispatcher('');\r\n        userCellDispatcher(0);\r\n        sizeDispatcher(size);\r\n        speedGameDispatcher(complexity);\r\n        modalActiveDispatcher('');\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h2>Настройки</h2>\r\n\r\n            <div className=\"select\">\r\n                <p className=\"titleModal\">размер поля</p>\r\n                <select name=\"selectSize\" value={size} onChange={(event) => setSize(parseInt(event.target.value))}>\r\n                    <option value=\"3\" selected>3</option>\r\n                    <option value=\"4\">4</option>\r\n                    <option value=\"5\">5</option>\r\n                    <option value=\"6\">6</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"select\">\r\n                <p className=\"titleModal\">сложность</p>\r\n                <select name=\"selectSpeed\" value={complexity}\r\n                        onChange={(event) => setComplexity(parseInt(event.target.value))}>\r\n                    <option value=\"2000\" selected>легко</option>\r\n                    <option value=\"1500\">средне</option>\r\n                    <option value=\"800\">тяжело</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"btnSettings\">\r\n                <button onClick={settingsSave}>сохранить</button>\r\n                <button onClick={() => modalActiveDispatcher('')}>закрыть</button>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport {RootState} from '../../../redux/store';\r\nimport {Statistic} from './statistic/Statistic';\r\nimport {Settings} from './settings/Settings';\r\n\r\n\r\n\r\n\r\nexport const ModalContent:React.FunctionComponent = () =>{\r\n    const {modalActive} = useSelector((state: RootState) => state);\r\n    let content;\r\n    if (modalActive === 'statistic') {\r\n        content = <Statistic />\r\n    } else if (modalActive === 'settings'){\r\n        content = <Settings/>\r\n    } else {\r\n        content = ''\r\n    }\r\n\r\n\r\n    return (<div>{content}</div>)\r\n}","import React, {useEffect} from 'react';\r\nimport './modal.scss';\r\nimport {useSelector} from 'react-redux';\r\nimport {RootState} from '../../redux/store';\r\nimport {modalActiveDispatcher, statisticGameDispatcher} from '../../redux/dispatchers/dispatcher';\r\nimport {ModalContent} from '../header/modalContent/ModalContent';\r\n\r\n\r\nexport const ModalWindow: React.FunctionComponent = () => {\r\n    const {modalActive, statisticGame} = useSelector((state: RootState) => state);\r\n\r\n\r\n    useEffect(()=> {\r\n        const statistic = JSON.parse(localStorage.getItem('labyrinth') as string) || [];\r\n        statisticGameDispatcher(statistic);\r\n    }, [])\r\n\r\n\r\n    useEffect(()=> {\r\n        localStorage.setItem('labyrinth', JSON.stringify(statisticGame))\r\n    }, [statisticGame]);\r\n\r\n\r\n\r\n    return (\r\n        <div className={modalActive === '' ? 'modal' : 'modal activeModal'} onClick={() => {\r\n            modalActiveDispatcher('')\r\n        }}>\r\n            <div className=\"modal_content\" onClick={e => e.stopPropagation()}> <ModalContent/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n","import React from 'react';\nimport {Playground} from './playground/Playground';\nimport {Header} from './header/Header';\nimport {Track} from './track/Track';\nimport {Provider} from 'react-redux';\nimport {store} from '../redux/store';\nimport {ModalWindow} from './modal/Modal';\n\nexport const App: React.FunctionComponent = () => {\n\n    return (\n        <Provider store={store}>\n            <div className='wrapper'>\n                <Header/>\n                <Playground/>\n                <Track/>\n            </div>\n            <ModalWindow/>\n        </Provider>\n    );\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './components/App';\nimport './styles/reset.scss';\nimport './styles/index.scss';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}